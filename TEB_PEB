typedef struct _TEB {
	_NT_TIB NtTib;
	void * EnvironmentPointer;
	_CLIENT_ID ClientId;
	void * ActiveRpcHandle;
	void * ThreadLocalStoragePointer;
	_PEB * ProcessEnvironmentBlock;
	ULONG LastErrorValue;
	ULONG CountOfOwnedCriticalSections;
	void * CsrClientThread;
	void * Win32ThreadInfo;
	ULONG User32Reserved[0x1a];
	ULONG UserReserved[0x5];
	void * WOW32Reserved;
	ULONG CurrentLocale;
	ULONG FpSoftwareStatusRegister;
	void * ReservedForDebuggerInstrumentation[0x10];
	void * SystemReserved1[0x1e];
	CHAR PlaceholderCompatibilityMode;
	UCHAR PlaceholderHydrationAlwaysExplicit;
	CHAR PlaceholderReserved[0xa];
	ULONG ProxiedProcessId;
	_ACTIVATION_CONTEXT_STACK _ActivationStack;
	UCHAR WorkingOnBehalfTicket[0x8];
	LONG ExceptionCode;
	UCHAR Padding0[0x4];
	_ACTIVATION_CONTEXT_STACK * ActivationContextStackPointer;
	ULONGLONG InstrumentationCallbackSp;
	ULONGLONG InstrumentationCallbackPreviousPc;
	ULONGLONG InstrumentationCallbackPreviousSp;
	ULONG TxFsContext;
	UCHAR InstrumentationCallbackDisabled;
	UCHAR UnalignedLoadStoreExceptions;
	UCHAR Padding1[0x2];
	_GDI_TEB_BATCH GdiTebBatch;
	_CLIENT_ID RealClientId;
	void * GdiCachedProcessHandle;
	ULONG GdiClientPID;
	ULONG GdiClientTID;
	void * GdiThreadLocalInfo;
	ULONGLONG Win32ClientInfo[0x3e];
	void * glDispatchTable[0xe9];
	ULONGLONG glReserved1[0x1d];
	void * glReserved2;
	void * glSectionInfo;
	void * glSection;
	void * glTable;
	void * glCurrentRC;
	void * glContext;
	ULONG LastStatusValue;
	UCHAR Padding2[0x4];
	_UNICODE_STRING StaticUnicodeString;
	WCHAR StaticUnicodeBuffer[0x105];
	UCHAR Padding3[0x6];
	void * DeallocationStack;
	void * TlsSlots[0x40];
	_LIST_ENTRY TlsLinks;
	void * Vdm;
	void * ReservedForNtRpc;
	void * DbgSsReserved[0x2];
	ULONG HardErrorMode;
	UCHAR Padding4[0x4];
	void * Instrumentation[0xb];
	_GUID ActivityId;
	void * SubProcessTag;
	void * PerflibData;
	void * EtwTraceData;
	void * WinSockData;
	ULONG GdiBatchCount;
	_PROCESSOR_NUMBER CurrentIdealProcessor;
	ULONG IdealProcessorValue;
	UCHAR ReservedPad0;
	UCHAR ReservedPad1;
	UCHAR ReservedPad2;
	UCHAR IdealProcessor;
	ULONG GuaranteedStackBytes;
	UCHAR Padding5[0x4];
	void * ReservedForPerf;
	void * ReservedForOle;
	ULONG WaitingOnLoaderLock;
	UCHAR Padding6[0x4];
	void * SavedPriorityState;
	ULONGLONG ReservedForCodeCoverage;
	void * ThreadPoolData;
	void * * TlsExpansionSlots;
	void * DeallocationBStore;
	void * BStoreLimit;
	ULONG MuiGeneration;
	ULONG IsImpersonating;
	void * NlsCache;
	void * pShimData;
	ULONG HeapData;
	UCHAR Padding7[0x4];
	void * CurrentTransactionHandle;
	_TEB_ACTIVE_FRAME * ActiveFrame;
	void * FlsData;
	void * PreferredLanguages;
	void * UserPrefLanguages;
	void * MergedPrefLanguages;
	ULONG MuiImpersonation;
	USHORT volatile CrossTebFlags;
	USHORT SpareCrossTebBits : 16; // 0xffff;
	USHORT SameTebFlags;
	USHORT SafeThunkCall : 01; // 0x0001;
	USHORT InDebugPrint : 01; // 0x0002;
	USHORT HasFiberData : 01; // 0x0004;
	USHORT SkipThreadAttach : 01; // 0x0008;
	USHORT WerInShipAssertCode : 01; // 0x0010;
	USHORT RanProcessInit : 01; // 0x0020;
	USHORT ClonedThread : 01; // 0x0040;
	USHORT SuppressDebugMsg : 01; // 0x0080;
	USHORT DisableUserStackWalk : 01; // 0x0100;
	USHORT RtlExceptionAttached : 01; // 0x0200;
	USHORT InitialThread : 01; // 0x0400;
	USHORT SessionAware : 01; // 0x0800;
	USHORT LoadOwner : 01; // 0x1000;
	USHORT LoaderWorker : 01; // 0x2000;
	USHORT SkipLoaderInit : 01; // 0x4000;
	USHORT SpareSameTebBits : 01; // 0x8000;
	void * TxnScopeEnterCallback;
	void * TxnScopeExitCallback;
	void * TxnScopeContext;
	ULONG LockCount;
	LONG WowTebOffset;
	void * ResourceRetValue;
	void * ReservedForWdf;
	ULONGLONG ReservedForCrt;
	_GUID EffectiveContainerId;
	ULONGLONG LastSleepCounter;
	ULONG DelayBackoff;
	UCHAR Padding8[0x4];
} TEB, *PTEB;

typedef struct _PEB {
	UCHAR InheritedAddressSpace;
	UCHAR ReadImageFileExecOptions;
	UCHAR BeingDebugged;
	UCHAR BitField;
	UCHAR ImageUsesLargePages : 01; // 0x01;
	UCHAR IsProtectedProcess : 01; // 0x02;
	UCHAR IsImageDynamicallyRelocated : 01; // 0x04;
	UCHAR SkipPatchingUser32Forwarders : 01; // 0x08;
	UCHAR IsPackagedProcess : 01; // 0x10;
	UCHAR IsAppContainer : 01; // 0x20;
	UCHAR IsProtectedProcessLight : 01; // 0x40;
	UCHAR IsLongPathAwareProcess : 01; // 0x80;
	UCHAR Padding0[0x4];
	void * Mutant;
	void * ImageBaseAddress;
	_PEB_LDR_DATA * Ldr;
	_RTL_USER_PROCESS_PARAMETERS * ProcessParameters;
	void * SubSystemData;
	void * ProcessHeap;
	_RTL_CRITICAL_SECTION * FastPebLock;
	_SLIST_HEADER * volatile AtlThunkSListPtr;
	void * IFEOKey;
	ULONG CrossProcessFlags;
	ULONG ProcessInJob : 01; // 0x00000001;
	ULONG ProcessInitializing : 01; // 0x00000002;
	ULONG ProcessUsingVEH : 01; // 0x00000004;
	ULONG ProcessUsingVCH : 01; // 0x00000008;
	ULONG ProcessUsingFTH : 01; // 0x00000010;
	ULONG ProcessPreviouslyThrottled : 01; // 0x00000020;
	ULONG ProcessCurrentlyThrottled : 01; // 0x00000040;
	ULONG ProcessImagesHotPatched : 01; // 0x00000080;
	ULONG ReservedBits0 : 24; // 0xffffff00;
	UCHAR Padding1[0x4];
	void * KernelCallbackTable;
	void * UserSharedInfoPtr;
	ULONG SystemReserved;
	ULONG AtlThunkSListPtr32;
	void * ApiSetMap;
	ULONG TlsExpansionCounter;
	UCHAR Padding2[0x4];
	_RTL_BITMAP * TlsBitmap;
	ULONG TlsBitmapBits[0x2];
	void * ReadOnlySharedMemoryBase;
	void * SharedData;
	void * * ReadOnlyStaticServerData;
	void * AnsiCodePageData;
	void * OemCodePageData;
	void * UnicodeCaseTableData;
	ULONG NumberOfProcessors;
	ULONG NtGlobalFlag;
	_LARGE_INTEGER CriticalSectionTimeout;
	ULONGLONG HeapSegmentReserve;
	ULONGLONG HeapSegmentCommit;
	ULONGLONG HeapDeCommitTotalFreeThreshold;
	ULONGLONG HeapDeCommitFreeBlockThreshold;
	ULONG NumberOfHeaps;
	ULONG MaximumNumberOfHeaps;
	void * * ProcessHeaps;
	void * GdiSharedHandleTable;
	void * ProcessStarterHelper;
	ULONG GdiDCAttributeList;
	UCHAR Padding3[0x4];
	_RTL_CRITICAL_SECTION * LoaderLock;
	ULONG OSMajorVersion;
	ULONG OSMinorVersion;
	USHORT OSBuildNumber;
	USHORT OSCSDVersion;
	ULONG OSPlatformId;
	ULONG ImageSubsystem;
	ULONG ImageSubsystemMajorVersion;
	ULONG ImageSubsystemMinorVersion;
	UCHAR Padding4[0x4];
	ULONGLONG ActiveProcessAffinityMask;
	ULONG GdiHandleBuffer[0x3c];
	void (* PostProcessInitRoutine)();
	_RTL_BITMAP * TlsExpansionBitmap;
	ULONG TlsExpansionBitmapBits[0x20];
	ULONG SessionId;
	UCHAR Padding5[0x4];
	_ULARGE_INTEGER AppCompatFlags;
	_ULARGE_INTEGER AppCompatFlagsUser;
	void * pShimData;
	void * AppCompatInfo;
	_UNICODE_STRING CSDVersion;
	_ACTIVATION_CONTEXT_DATA const * ActivationContextData;
	_ASSEMBLY_STORAGE_MAP * ProcessAssemblyStorageMap;
	_ACTIVATION_CONTEXT_DATA const * SystemDefaultActivationContextData;
	_ASSEMBLY_STORAGE_MAP * SystemAssemblyStorageMap;
	ULONGLONG MinimumStackCommit;
	void * SparePointers[0x4];
	ULONG SpareUlongs[0x3];
	USHORT ActiveCodePage;
	USHORT OemCodePage;
	USHORT UseCaseMapping;
	USHORT UnusedNlsField;
	void * WerRegistrationData;
	void * WerShipAssertPtr;
	void * PatchLoaderData;
	void * pImageHeaderHash;
	ULONG TracingFlags;
	ULONG HeapTracingEnabled : 01; // 0x00000001;
	ULONG CritSecTracingEnabled : 01; // 0x00000002;
	ULONG LibLoaderTracingEnabled : 01; // 0x00000004;
	ULONG SpareTracingBits : 29; // 0xfffffff8;
	UCHAR Padding6[0x4];
	ULONGLONG CsrServerReadOnlySharedMemoryBase;
	ULONGLONG TppWorkerpListLock;
	_LIST_ENTRY TppWorkerpList;
	void * WaitOnAddressHashTable[0x80];
	void * TelemetryCoverageHeader;
	ULONG CloudFileFlags;
	ULONG CloudFileDiagFlags;
	CHAR PlaceholderCompatibilityMode;
	CHAR PlaceholderCompatibilityModeReserved[0x7];
	_LEAP_SECOND_DATA * LeapSecondData;
	ULONG LeapSecondFlags;
	ULONG SixtySecondEnabled : 01; // 0x00000001;
	ULONG Reserved : 31; // 0xfffffffe;
	ULONG NtGlobalFlag2;
} PEB, *PPEB;

typedef struct _PEB_LDR_DATA {
	ULONG Length;
	UCHAR Initialized;
	void * SsHandle;
	_LIST_ENTRY InLoadOrderModuleList;
	_LIST_ENTRY InMemoryOrderModuleList;
	_LIST_ENTRY InInitializationOrderModuleList;
	void * EntryInProgress;
	UCHAR ShutdownInProgress;
	void * ShutdownThreadId;
} PEB_LDR_DATA, *PPEB_LDR_DATA;

typedef struct _LDR_DATA_TABLE_ENTRY {
	_LIST_ENTRY InLoadOrderLinks;
	_LIST_ENTRY InMemoryOrderLinks;
	_LIST_ENTRY InInitializationOrderLinks;
	void * DllBase;
	void * EntryPoint;
	ULONG SizeOfImage;
	_UNICODE_STRING FullDllName;
	_UNICODE_STRING BaseDllName;
	UCHAR FlagGroup[0x4];
	ULONG Flags;
	ULONG PackagedBinary : 01; // 0x00000001;
	ULONG MarkedForRemoval : 01; // 0x00000002;
	ULONG ImageDll : 01; // 0x00000004;
	ULONG LoadNotificationsSent : 01; // 0x00000008;
	ULONG TelemetryEntryProcessed : 01; // 0x00000010;
	ULONG ProcessStaticImport : 01; // 0x00000020;
	ULONG InLegacyLists : 01; // 0x00000040;
	ULONG InIndexes : 01; // 0x00000080;
	ULONG ShimDll : 01; // 0x00000100;
	ULONG InExceptionTable : 01; // 0x00000200;
	ULONG ReservedFlags1 : 02; // 0x00000c00;
	ULONG LoadInProgress : 01; // 0x00001000;
	ULONG LoadConfigProcessed : 01; // 0x00002000;
	ULONG EntryProcessed : 01; // 0x00004000;
	ULONG ProtectDelayLoad : 01; // 0x00008000;
	ULONG ReservedFlags3 : 02; // 0x00030000;
	ULONG DontCallForThreads : 01; // 0x00040000;
	ULONG ProcessAttachCalled : 01; // 0x00080000;
	ULONG ProcessAttachFailed : 01; // 0x00100000;
	ULONG CorDeferredValidate : 01; // 0x00200000;
	ULONG CorImage : 01; // 0x00400000;
	ULONG DontRelocate : 01; // 0x00800000;
	ULONG CorILOnly : 01; // 0x01000000;
	ULONG ChpeImage : 01; // 0x02000000;
	ULONG ReservedFlags5 : 02; // 0x0c000000;
	ULONG Redirected : 01; // 0x10000000;
	ULONG ReservedFlags6 : 02; // 0x60000000;
	ULONG CompatDatabaseProcessed : 01; // 0x80000000;
	USHORT ObsoleteLoadCount;
	USHORT TlsIndex;
	_LIST_ENTRY HashLinks;
	ULONG TimeDateStamp;
	_ACTIVATION_CONTEXT * EntryPointActivationContext;
	void * Lock;
	_LDR_DDAG_NODE * DdagNode;
	_LIST_ENTRY NodeModuleLink;
	_LDRP_LOAD_CONTEXT * LoadContext;
	void * ParentDllBase;
	void * SwitchBackContext;
	_RTL_BALANCED_NODE BaseAddressIndexNode;
	_RTL_BALANCED_NODE MappingInfoIndexNode;
	ULONGLONG OriginalBase;
	_LARGE_INTEGER LoadTime;
	ULONG BaseNameHashValue;
	_LDR_DLL_LOAD_REASON LoadReason;
	ULONG ImplicitPathOptions;
	ULONG ReferenceCount;
	ULONG DependentLoadFlags;
	UCHAR SigningLevel;
} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;

typedef struct _IMAGE_DATA_DIRECTORY {
    DWORD   VirtualAddress;
    DWORD   Size;
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;

typedef struct _IMAGE_EXPORT_DIRECTORY {
    DWORD   Characteristics;
    DWORD   TimeDateStamp;
    WORD    MajorVersion;
    WORD    MinorVersion;
    DWORD   Name;
    DWORD   Base;
    DWORD   NumberOfFunctions;
    DWORD   NumberOfNames;
    DWORD   AddressOfFunctions;
    DWORD   AddressOfNames;
    DWORD   AddressOfNameOrdinals;
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY;

